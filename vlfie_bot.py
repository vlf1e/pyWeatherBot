import telebot
import requests

from telebot.types import KeyboardButton, ReplyKeyboardMarkup

bot = telebot.TeleBot('id')

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
#–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ "–î–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é" –∏ "–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"
auto_location_button = KeyboardButton("–î–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é", request_location=True) #request_location –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
set_location_button = KeyboardButton("–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
#–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã resize_keyboard –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
start_kb.add(auto_location_button)
start_kb.add(set_location_button)

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–≥–æ–¥—ã
#–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ "–£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É" –∏ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞"
current_forecast_button = KeyboardButton("–£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É")
forecast_after_3hour = KeyboardButton("–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞")
back_button = KeyboardButton("–ù–∞–∑–∞–¥") # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
#–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
forecast_kb = ReplyKeyboardMarkup(resize_keyboard=True)
#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
forecast_kb.add(current_forecast_button)
forecast_kb.add(forecast_after_3hour)
forecast_kb.add(back_button)

longitude = 0.0 #–î–æ–ª–≥–æ—Ç–∞
latitude = 0.0 #–®–∏—Ä–∏–Ω–∞
message_ids = [] #–ú–∞—Å—Å–∏–≤ –¥–ª—è id —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∏—Ö —É–¥–∞–ª—è—Ç—å

#–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ –∏–º–µ–Ω–∏ –≥–æ—Ä–æ–¥–∞
def get_coords(message):
    res = requests.get('http://api.openweathermap.org/geo/1.0/direct', params={ #–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ json —Ñ–æ—Ä–º–∞—Ç
        'q': message.text, #–≥–æ—Ä–æ–¥
        'lang': 'ru', #—è–∑—ã–∫
        'appid': 'id' #id –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ api
    }).json()
    try:
        global longitude
        longitude = res[0]['lon']
        global latitude
        latitude = res[0]['lat']
        temp = bot.send_message(message.chat.id, '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ!', reply_markup=forecast_kb)
        message_ids.append(temp.id)
    except IndexError:
        temp = bot.send_message(message.chat.id, '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', reply_markup=start_kb)
        message_ids.append(temp.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_reply(message):
    bot.delete_message(message.chat.id, message.id) #–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    temp = bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç vlfie!\n–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–π –º–Ω–µ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é.",
                     reply_markup=start_kb) #–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã start_kb
    message_ids.append(temp.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
@bot.message_handler(content_types=['location']) #"–õ–æ–≤–∏—Ç" —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º
def get_location(message):
    global message_ids
    message_ids.append(message.id) #–¥–æ–±–∞–≤–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤
    if len(message_ids) != 0: #–µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏–π, —Ç–æ —É–¥–∞–ª—è–µ–º –∏—Ö
        bot.delete_messages(message.chat.id, message_ids)
        message_ids = []
    global longitude, latitude
    if message.location:
        # –æ–±—Ä–µ–∑–∞–µ–º –¥–æ 2 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏
        longitude = str(message.location.longitude)[:5]
        latitude = str(message.location.latitude)[:5]
        temp = bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!", reply_markup=forecast_kb) #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_ids.append(temp.id) #–î–æ–±–∞–≤–ª—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ —Ç–µ–∫—Å—Ç
@bot.message_handler(content_types=['text']) #"–õ–æ–≤–∏—Ç" —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
def get_forecast(message):
    global message_ids
    if len(message_ids) != 0:
        bot.delete_messages(message.chat.id, message_ids)
        message_ids = []
    bot.delete_message(message.chat.id, message.id)
    match message.text:
        case '–î–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é':
            pass
        case '–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞':
            temp = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
            message_ids.append(temp.id)
        case '–£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É':
            send_current_weather(message)
        case '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞':
            send_3hour_forecast(message)
        case '–ù–∞–∑–∞–¥':
            temp = bot.send_message(message.chat.id, '–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é', reply_markup=start_kb)
            message_ids.append(temp.id)
        case _:
            get_coords(message)

def send_current_weather(message):
    global latitude, longitude
    res = requests.get("http://api.openweathermap.org/data/2.5/find",
                       params={
                           'lon': longitude,
                           'lat': latitude,
                           'type': 'like',
                           'lang': 'ru',
                           'units': 'metric',
                           'APPID': 'a4cdfe7972c946e9b3b26c0571b79dca'
                       }
                       )
    aqi_res = requests.get("http://api.openweathermap.org/data/2.5/air_pollution",
                           params={
                               'lon': longitude,
                               'lat': latitude,
                               'lang': 'ru',
                               'APPID': 'a4cdfe7972c946e9b3b26c0571b79dca'
                           }
                           )
    if res.status_code == 200 and aqi_res.status_code == 200:
        data = res.json()
        aqi = aqi_res.json()
        air_quality = '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'
        if data['list']:
            weather = data['list'][0]
            match weather['weather'][0]['description']:
                case "—Å–æ–ª–Ω–µ—á–Ω–æ":
                    temp = bot.send_message(message.chat.id, "‚òÄ")
                    message_ids.append(temp.id)
                case "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":
                    temp = bot.send_message(message.chat.id, "‚õÖ")
                    message_ids.append(temp.id)
                case "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
                    temp = bot.send_message(message.chat.id, "‚õÖ")
                    message_ids.append(temp.id)
                case "—Ç—É–º–∞–Ω":
                    temp = bot.send_message(message.chat.id, "üå´")
                    message_ids.append(temp.id)
                case "–æ–±–ª–∞—á–Ω–æ":
                    temp = bot.send_message(message.chat.id, "‚òÅ")
                    message_ids.append(temp.id)
                case "—Å–Ω–µ–≥":
                    temp = bot.send_message(message.chat.id, "üå®")
                    message_ids.append(temp.id)
                case "–¥–æ–∂–¥—å":
                    temp = bot.send_message(message.chat.id, "üåß")
                    message_ids.append(temp.id)
                case "–ø–∞—Å–º—É—Ä–Ω–æ":
                    temp = bot.send_message(message.chat.id, "üå•")
                    message_ids.append(temp.id)
                case "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":
                    temp = bot.send_message(message.chat.id, "üíß")
                    message_ids.append(temp.id)
                case "–ª–∏–≤–µ–Ω—å":
                    temp = bot.send_message(message.chat.id, "‚òîÔ∏è")
                    message_ids.append(temp.id)
                case "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥":
                    temp = bot.send_message(message.chat.id, "‚ùÑÔ∏è")
                    message_ids.append(temp.id)
                case "–≤–µ—Ç—Ä–µ–Ω–Ω–æ":
                    temp = bot.send_message(message.chat.id, "üí®")
                    message_ids.append(temp.id)
                case "–¥–æ–∂–¥—å —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":
                    temp = bot.send_message(message.chat.id, "üå¶")
                    message_ids.append(temp.id)
                case "–î–æ–∂–¥—å —Å –≥—Ä–æ–∑–∞–º–∏":
                    temp = bot.send_message(message.chat.id, "‚õà")
                    message_ids.append(temp.id)
                case "–æ–±–ª–∞—á–Ω–æ —Å –º–æ–ª–Ω–∏—è–º–∏":
                    temp = bot.send_message(message.chat.id, "üå©")
                    message_ids.append(temp.id)
                case "–≥—Ä–æ–∑–∞":
                    temp = bot.send_message(message.chat.id, "‚ö°Ô∏è")
                    message_ids.append(temp.id)
            temp = bot.send_message(message.chat.id, f"–°–µ–≥–æ–¥–Ω—è: {weather['weather'][0]['description']}")
            message_ids.append(temp.id)
            temp = bot.send_message(message.chat.id, f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['main']['temp']}¬∞C")
            message_ids.append(temp.id)
            temp = bot.send_message(message.chat.id, f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather['main']['feels_like']}¬∞C")
            message_ids.append(temp.id)
            temp = bot.send_message(message.chat.id, f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {weather['wind']['speed']} –º/—Å")
            message_ids.append(temp.id)
            match aqi['list'][0]['main']['aqi']:
                case 1:
                    air_quality = '—Ö–æ—Ä–æ—à–µ–µ'
                case 2:
                    air_quality = '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ'
                case 3:
                    air_quality = '—É–º–µ—Ä–µ–Ω–Ω–æ–µ'
                case 4:
                    air_quality = '–ø–ª–æ—Ö–æ–µ'
                case 5:
                    air_quality = '–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ'
            temp = bot.send_message(message.chat.id, f"–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞: {air_quality}", reply_markup=forecast_kb)
            message_ids.append(temp.id)
        else:
            temp = bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ.", reply_markup=forecast_kb)
            message_ids.append(temp.id)
    else:
        temp = bot.send_message(message.chat.id, f"Error: {res.status_code}; {res.text}", reply_markup=forecast_kb)
        message_ids.append(temp.id)


def send_3hour_forecast(message):
    res = requests.get("http://api.openweathermap.org/data/2.5/forecast",
                       params={
                           'lon': longitude,
                           'lat': latitude,
                           'type': 'like',
                           'lang': 'ru',
                           'units': 'metric',
                           'APPID': 'a4cdfe7972c946e9b3b26c0571b79dca'
                       }
                       )
    aqi_res = requests.get("http://api.openweathermap.org/data/2.5/air_pollution",
                           params={
                               'lon': longitude,
                               'lat': latitude,
                               'lang': 'ru',
                               'APPID': 'a4cdfe7972c946e9b3b26c0571b79dca'
                           }
                           )
    if res.status_code == 200:
        data = res.json()
        aqi = aqi_res.json()
        i = 0
        weather = data['list'][0]
        for forecast in data['list']:
            if i == 1:
                temp = bot.send_message(message.chat.id, '–ü–æ–≥–æ–¥–∞ —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞')
                message_ids.append(temp.id)
                match forecast['weather'][0]['description']:
                    case "—Å–æ–ª–Ω–µ—á–Ω–æ":
                        temp = bot.send_message(message.chat.id, "‚òÄ")
                        message_ids.append(temp.id)
                    case "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":
                        temp = bot.send_message(message.chat.id, "‚õÖ")
                        message_ids.append(temp.id)
                    case "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
                        temp = bot.send_message(message.chat.id, "‚õÖ")
                        message_ids.append(temp.id)
                    case "—Ç—É–º–∞–Ω":
                        temp = bot.send_message(message.chat.id, "üå´")
                        message_ids.append(temp.id)
                    case "–æ–±–ª–∞—á–Ω–æ":
                        temp = bot.send_message(message.chat.id, "‚òÅ")
                        message_ids.append(temp.id)
                    case "—Å–Ω–µ–≥":
                        temp = bot.send_message(message.chat.id, "üå®")
                        message_ids.append(temp.id)
                    case "–¥–æ–∂–¥—å":
                        temp = bot.send_message(message.chat.id, "üåß")
                        message_ids.append(temp.id)
                    case "–ø–∞—Å–º—É—Ä–Ω–æ":
                        temp = bot.send_message(message.chat.id, "üå•")
                        message_ids.append(temp.id)
                    case "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":
                        temp = bot.send_message(message.chat.id, "üíß")
                        message_ids.append(temp.id)
                    case "–ª–∏–≤–µ–Ω—å":
                        temp = bot.send_message(message.chat.id, "‚òîÔ∏è")
                        message_ids.append(temp.id)
                    case "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥":
                        temp = bot.send_message(message.chat.id, "‚ùÑÔ∏è")
                        message_ids.append(temp.id)
                    case "–≤–µ—Ç—Ä–µ–Ω–Ω–æ":
                        temp = bot.send_message(message.chat.id, "üí®")
                        message_ids.append(temp.id)
                    case "–¥–æ–∂–¥—å —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":
                        temp = bot.send_message(message.chat.id, "üå¶")
                        message_ids.append(temp.id)
                    case "–î–æ–∂–¥—å —Å –≥—Ä–æ–∑–∞–º–∏":
                        temp = bot.send_message(message.chat.id, "‚õà")
                        message_ids.append(temp.id)
                    case "–æ–±–ª–∞—á–Ω–æ —Å –º–æ–ª–Ω–∏—è–º–∏":
                        temp = bot.send_message(message.chat.id, "üå©")
                        message_ids.append(temp.id)
                    case "–≥—Ä–æ–∑–∞":
                        temp = bot.send_message(message.chat.id, "‚ö°Ô∏è")
                        message_ids.append(temp.id)
                temp = bot.send_message(message.chat.id, f"–ë—É–¥–µ—Ç: {weather['weather'][0]['description']}")
                message_ids.append(temp.id)
                temp = bot.send_message(message.chat.id, f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['main']['temp']}¬∞C")
                message_ids.append(temp.id)
                temp = bot.send_message(message.chat.id, f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather['main']['feels_like']}¬∞C")
                message_ids.append(temp.id)
                temp = bot.send_message(message.chat.id, f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {weather['wind']['speed']} –º/—Å")
                message_ids.append(temp.id)
                match aqi['list'][0]['main']['aqi']:
                    case 1:
                        air_quality = '—Ö–æ—Ä–æ—à–µ–µ'
                    case 2:
                        air_quality = '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ'
                    case 3:
                        air_quality = '—É–º–µ—Ä–µ–Ω–Ω–æ–µ'
                    case 4:
                        air_quality = '–ø–ª–æ—Ö–æ–µ'
                    case 5:
                        air_quality = '–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ'
                temp = bot.send_message(message.chat.id, f"–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞: {air_quality}", reply_markup=forecast_kb)
                message_ids.append(temp.id)
            i += 1
    else:
        temp = bot.send_message(message.chat.id, f"Error: {res.status_code}; {res.text}")
        message_ids.append(temp.id)

bot.infinity_polling()
